{"version":3,"sources":["../../src/core/animation-loop.js"],"names":["requestAnimationFrame","cancelAnimationFrame","callback","window","setTimeout","timerId","clearTimeout","DEFAULT_GL_OPTIONS","preserveDrawingBuffer","AnimationLoop","props","onCreateContext","opts","onInitialize","onRender","onFinalize","gl","glOptions","width","height","createFramebuffer","autoResizeViewport","autoResizeDrawingBuffer","useDevicePixels","deprecated","useDevicePixelRatio","_onCreateContext","start","bind","stop","_renderFrame","_createFramebuffer","_onInitialize","_onRender","_onFinalize","setProps","reason","needsRedraw","_stopped","_animationFrameId","_startPromise","then","_createWebGLContext","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","_callbackData","_addCallbackData","appContext","_finalizeCallbackData","autoResizeCanvas","_onSetupFrame","_resizeFramebuffer","_setupFrame","tick","canvas","framebuffer","tock","aspect","Object","assign","Error","viewport","resize"],"mappings":"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","file":"animation-loop.js","sourcesContent":["/* global window, setTimeout, clearTimeout */\nimport {isBrowser, log} from '../utils';\nimport {getPageLoadPromise, resizeDrawingBuffer} from '../webgl-utils';\nimport {createGLContext, isWebGL, resetParameters} from '../webgl';\nimport {Framebuffer} from '../webgl';\n\n// Node.js polyfills for requestAnimationFrame and cancelAnimationFrame\nexport function requestAnimationFrame(callback) {\n  return isBrowser ? window.requestAnimationFrame(callback) : setTimeout(callback, 1000 / 60);\n}\n\nexport function cancelAnimationFrame(timerId) {\n  return isBrowser ? window.cancelAnimationFrame(timerId) : clearTimeout(timerId);\n}\n\nconst DEFAULT_GL_OPTIONS = {\n  preserveDrawingBuffer: true\n};\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n\n      gl = null,\n      glOptions = {},\n      width = null,\n      height = null,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true\n    } = props;\n\n    let {\n      useDevicePixels = true\n    } = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels');\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this._onCreateContext = onCreateContext;\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this._renderFrame = this._renderFrame.bind(this);\n\n    this.glOptions = glOptions;\n    this._createFramebuffer = createFramebuffer;\n\n    this._onInitialize = onInitialize;\n    this._onRender = onRender;\n    this._onFinalize = onFinalize;\n\n    this.width = width;\n    this.height = height;\n\n    this.gl = gl;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    return this;\n  }\n\n  setNeedsRedraw(reason) {\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    this._stopped = false;\n    // console.debug(`Starting ${this.constructor.name}`);\n    if (!this._animationFrameId) {\n      // Wait for start promise before rendering frame\n      this._startPromise = getPageLoadPromise()\n      .then(() => {\n        if (this._stopped) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this._onInitialize(this._callbackData);\n      })\n      .then(appContext => {\n        if (!this._stopped) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false && !this._animationFrameId) {\n            this._animationFrameId = requestAnimationFrame(this._renderFrame);\n          }\n        }\n      });\n\n    }\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._animationFrameId) {\n      this._finalizeCallbackData();\n      cancelAnimationFrame(this._animationFrameId);\n      this._animationFrameId = null;\n      this._stopped = true;\n    }\n    return this;\n  }\n\n  // DEPRECATED METHODS\n\n  // Update parameters\n  setViewParameters({\n    autoResizeDrawingBuffer = true,\n    autoResizeCanvas = true,\n    autoResizeViewport = true,\n    useDevicePixels = true,\n    useDevicePixelRatio = null // deprecated\n  }) {\n    log.deprecated('AnimationLoop.setViewParameters', 'AnimationLoop.setProps');\n    this.autoResizeViewport = autoResizeViewport;\n    this.autoResizeCanvas = autoResizeCanvas;\n    this.autoResizeDrawingBuffer = autoResizeDrawingBuffer;\n    this.useDevicePixels = useDevicePixels;\n    if (useDevicePixelRatio !== null) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels');\n      this.useDevicePixels = useDevicePixelRatio;\n    }\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _setupFrame() {\n    if (this._onSetupFrame) {\n      // call callback\n      this._onSetupFrame(this._callbackData);\n      // end callback\n    } else {\n      this._resizeCanvasDrawingBuffer();\n      this._resizeViewport();\n      this._resizeFramebuffer();\n    }\n  }\n\n  /**\n   * @private\n   * Handles a render loop frame- updates context and calls the application\n   * callback\n   */\n  _renderFrame() {\n    this._setupFrame();\n    this._updateCallbackData();\n\n    // call callback\n    this._onRender(this._callbackData);\n    // end callback\n\n    // Increment tick\n    this._callbackData.tick++;\n\n    if (!this._stopped) {\n      // Request another render frame (now )\n      this._animationFrameId = requestAnimationFrame(this._renderFrame);\n    }\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this._callbackData = {\n      gl: this.gl,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n      stop: this.stop,\n      // Initial values\n      tick: 0,\n      tock: 0,\n      useDevicePixels: this.useDevicePixels\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    // CallbackData width and height represent drawing buffer width and height\n    const {canvas} = this.gl;\n    this._callbackData.width = canvas.width;\n    this._callbackData.height = canvas.height;\n    this._callbackData.aspect = canvas.width / canvas.height;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this._onFinalize(this._callbackData);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this._callbackData = Object.assign({}, this._callbackData, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, DEFAULT_GL_OPTIONS, this.glOptions);\n    if (opts.gl) {\n      this.gl = opts.gl;\n    } else {\n      this.gl = this._onCreateContext(opts);\n    }\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    // Setup default framebuffer\n    if (this._createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({width: this.gl.canvas.width, height: this.gl.canvas.height});\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeDrawingBuffer(this.gl.canvas, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n}\n"]}