{"version":3,"sources":["../src/headless.js"],"names":["ERR_NO_HEADLESS_GL","globals","headlessGL","module","require","headlessTypes","error","console","message","WebGLRenderingContext","isWebglAvailable"],"mappings":";;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,sHAAN,C,CANA;AACA;;;AASA,IAAI,oBAAJ,EAAgB;AACd,MAAI;AACF,mBAAKC,OAAL,CAAaC,UAAb,GAA0BC,OAAOC,OAAP,CAAe,IAAf,CAA1B;AACA,mBAAKH,OAAL,CAAaI,aAAb,GAA6BF,OAAOC,OAAP,CAAe,SAAf,CAA7B;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,YAAQD,KAAR,CAAcN,kBAAd;AACAO,YAAQD,KAAR,kBAA6BA,MAAME,OAAnC;AACD;AACD,wBAAO,eAAKP,OAAL,CAAaI,aAAb,CAA2BI,qBAAlC;AACD;;AAED;AACAL,QAAQ,mBAAR;;AAEO,IAAMM,8CAAmB,uBAAa,eAAKT,OAAL,CAAaC,UAAnD","file":"headless.js","sourcesContent":["/* eslint-disable quotes, no-console */\n/* global console */\nimport luma from './init';\nimport isBrowser from './utils/is-browser';\nimport assert from 'assert';\n\nconst ERR_NO_HEADLESS_GL = `\\\nFailed to dynamically load headless gl. \\\ngl not installed or not accessible from this directory.`;\n\nif (!isBrowser) {\n  try {\n    luma.globals.headlessGL = module.require('gl');\n    luma.globals.headlessTypes = module.require('gl/wrap');\n  } catch (error) {\n    console.error(ERR_NO_HEADLESS_GL);\n    console.error(`Node error: ${error.message}`);\n  }\n  assert(luma.globals.headlessTypes.WebGLRenderingContext);\n}\n\n// Make sure luma.gl initializes with valid types\nrequire('./webgl/api/types');\n\nexport const isWebglAvailable = isBrowser || luma.globals.headlessGL;\n"]}