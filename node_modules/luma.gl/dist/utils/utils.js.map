{"version":3,"sources":["../../src/utils/utils.js"],"names":["uid","isPowerOfTwo","isObjectEmpty","uidCounters","id","count","n","obj","isEmpty","key"],"mappings":";;;;;QASgBA,G,GAAAA,G;QAWAC,Y,GAAAA,Y;QAMAC,a,GAAAA,a;;AA1BhB;;;;;;AAEA,IAAMC,cAAc,EAApB;;AAEA;;;;;AAKO,SAASH,GAAT,GAAwB;AAAA,MAAXI,EAAW,uEAAN,IAAM;;AAC7BD,cAAYC,EAAZ,IAAkBD,YAAYC,EAAZ,KAAmB,CAArC;AACA,MAAMC,QAAQF,YAAYC,EAAZ,GAAd;AACA,SAAUA,EAAV,SAAgBC,KAAhB;AACD;;AAED;;;;;AAKO,SAASJ,YAAT,CAAsBK,CAAtB,EAAyB;AAC9B,wBAAQ,OAAOA,CAAP,KAAa,QAArB,EAAgC,wBAAhC;AACA,SAAOA,KAAM,CAACA,IAAKA,IAAI,CAAV,MAAkB,CAA/B;AACD;;AAED;AACO,SAASJ,aAAT,CAAuBK,GAAvB,EAA4B;AACjC,MAAIC,UAAU,IAAd;AACA;AACA,OAAK,IAAMC,GAAX,IAAkBF,GAAlB,EAAuB;AACrBC,cAAU,KAAV;AACA;AACD;AACD;AACA,SAAOA,OAAP;AACD","file":"utils.js","sourcesContent":["import assert from 'assert';\n\nconst uidCounters = {};\n\n/**\n * Returns a UID.\n * @param {String} id= - Identifier base name\n * @return {number} uid\n **/\nexport function uid(id = 'id') {\n  uidCounters[id] = uidCounters[id] || 1;\n  const count = uidCounters[id]++;\n  return `${id}-${count}`;\n}\n\n/**\n * Verifies if a given number is power of two or not.\n * @param {object} n - The number to check.\n * @return {Array} Returns true if the given number is power of 2, false otherwise.\n **/\nexport function isPowerOfTwo(n) {\n  assert((typeof n === 'number'), 'Input must be a number');\n  return n && ((n & (n - 1)) === 0);\n}\n\n// Returns true if given object is empty, false otherwise.\nexport function isObjectEmpty(obj) {\n  let isEmpty = true;\n  /* eslint-disable no-unused-vars  */\n  for (const key in obj) {\n    isEmpty = false;\n    break;\n  }\n  /* eslint-enable no-unused-vars  */\n  return isEmpty;\n}\n"]}