'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createMat4 = createMat4;
exports.transformVector = transformVector;
exports.mod = mod;
exports.lerp = lerp;

var _scale = require('gl-vec4/scale');

var _scale2 = _interopRequireDefault(_scale);

var _transformMat = require('gl-vec4/transformMat4');

var _transformMat2 = _interopRequireDefault(_transformMat);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()
function createMat4() {
  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
}

// Transforms a vec4 with a projection matrix
function transformVector(matrix, vector) {
  var result = (0, _transformMat2.default)([], vector, matrix);
  (0, _scale2.default)(result, result, 1 / result[3]);
  return result;
}

function mod(value, divisor) {
  var modulus = value % divisor;
  return modulus < 0 ? divisor + modulus : modulus;
}

function lerp(start, end, step) {
  return step * end + (1 - step) * start;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYXRoLXV0aWxzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZU1hdDQiLCJ0cmFuc2Zvcm1WZWN0b3IiLCJtb2QiLCJsZXJwIiwibWF0cml4IiwidmVjdG9yIiwicmVzdWx0IiwidmFsdWUiLCJkaXZpc29yIiwibW9kdWx1cyIsInN0YXJ0IiwiZW5kIiwic3RlcCJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFJZ0JBLFUsR0FBQUEsVTtRQUtBQyxlLEdBQUFBLGU7UUFNQUMsRyxHQUFBQSxHO1FBS0FDLEksR0FBQUEsSTs7QUFwQmhCOzs7O0FBQ0E7Ozs7OztBQUVBO0FBQ08sU0FBU0gsVUFBVCxHQUFzQjtBQUMzQixTQUFPLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsQ0FBaEIsRUFBbUIsQ0FBbkIsRUFBc0IsQ0FBdEIsRUFBeUIsQ0FBekIsRUFBNEIsQ0FBNUIsRUFBK0IsQ0FBL0IsRUFBa0MsQ0FBbEMsRUFBcUMsQ0FBckMsRUFBd0MsQ0FBeEMsRUFBMkMsQ0FBM0MsRUFBOEMsQ0FBOUMsQ0FBUDtBQUNEOztBQUVEO0FBQ08sU0FBU0MsZUFBVCxDQUF5QkcsTUFBekIsRUFBaUNDLE1BQWpDLEVBQXlDO0FBQzlDLE1BQU1DLFNBQVMsNEJBQW1CLEVBQW5CLEVBQXVCRCxNQUF2QixFQUErQkQsTUFBL0IsQ0FBZjtBQUNBLHVCQUFXRSxNQUFYLEVBQW1CQSxNQUFuQixFQUEyQixJQUFJQSxPQUFPLENBQVAsQ0FBL0I7QUFDQSxTQUFPQSxNQUFQO0FBQ0Q7O0FBRU0sU0FBU0osR0FBVCxDQUFhSyxLQUFiLEVBQW9CQyxPQUFwQixFQUE2QjtBQUNsQyxNQUFNQyxVQUFVRixRQUFRQyxPQUF4QjtBQUNBLFNBQU9DLFVBQVUsQ0FBVixHQUFjRCxVQUFVQyxPQUF4QixHQUFrQ0EsT0FBekM7QUFDRDs7QUFFTSxTQUFTTixJQUFULENBQWNPLEtBQWQsRUFBcUJDLEdBQXJCLEVBQTBCQyxJQUExQixFQUFnQztBQUNyQyxTQUFPQSxPQUFPRCxHQUFQLEdBQWEsQ0FBQyxJQUFJQyxJQUFMLElBQWFGLEtBQWpDO0FBQ0QiLCJmaWxlIjoibWF0aC11dGlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2ZWM0X3NjYWxlIGZyb20gJ2dsLXZlYzQvc2NhbGUnO1xuaW1wb3J0IHZlYzRfdHJhbnNmb3JtTWF0NCBmcm9tICdnbC12ZWM0L3RyYW5zZm9ybU1hdDQnO1xuXG4vLyBIZWxwZXIsIGF2b2lkcyBsb3ctcHJlY2lzaW9uIDMyIGJpdCBtYXRyaWNlcyBmcm9tIGdsLW1hdHJpeCBtYXQ0LmNyZWF0ZSgpXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTWF0NCgpIHtcbiAgcmV0dXJuIFsxLCAwLCAwLCAwLCAwLCAxLCAwLCAwLCAwLCAwLCAxLCAwLCAwLCAwLCAwLCAxXTtcbn1cblxuLy8gVHJhbnNmb3JtcyBhIHZlYzQgd2l0aCBhIHByb2plY3Rpb24gbWF0cml4XG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtVmVjdG9yKG1hdHJpeCwgdmVjdG9yKSB7XG4gIGNvbnN0IHJlc3VsdCA9IHZlYzRfdHJhbnNmb3JtTWF0NChbXSwgdmVjdG9yLCBtYXRyaXgpO1xuICB2ZWM0X3NjYWxlKHJlc3VsdCwgcmVzdWx0LCAxIC8gcmVzdWx0WzNdKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vZCh2YWx1ZSwgZGl2aXNvcikge1xuICBjb25zdCBtb2R1bHVzID0gdmFsdWUgJSBkaXZpc29yO1xuICByZXR1cm4gbW9kdWx1cyA8IDAgPyBkaXZpc29yICsgbW9kdWx1cyA6IG1vZHVsdXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsZXJwKHN0YXJ0LCBlbmQsIHN0ZXApIHtcbiAgcmV0dXJuIHN0ZXAgKiBlbmQgKyAoMSAtIHN0ZXApICogc3RhcnQ7XG59XG4iXX0=